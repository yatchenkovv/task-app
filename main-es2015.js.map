{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/app-reports/app-reports.component.ts","./src/app/components/app-reports/app-reports.component.html","./src/app/mocks/in-memory.data.service.ts","./src/app/mocks/mock.reports.ts","./src/app/services/filters.service.ts","./src/app/services/reports.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'task-app';\n}\n","<mat-toolbar color=\"primary\">V.Task Test</mat-toolbar>\n\n<app-reports></app-reports>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReportsComponent } from './components/app-reports/app-reports.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './mocks/in-memory.data.service';\n// import { FilterReports } from './filterPipe/filter.pipe';\n\n@NgModule({\n  declarations: [\n      AppComponent,\n      ReportsComponent,\n      // FilterReports,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatButtonModule,\n    AppRoutingModule,\n    HttpClientModule,\n    HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryDataService, { dataEncapsulation: false }\n      ),\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { ReportsService } from '../../services/reports.service';\r\nimport { IReport } from 'src/app/interfaces/IReport';\r\nimport { Observable, of } from 'rxjs';\r\nimport { FiltersService } from 'src/app/services/filters.service';\r\nimport { IOptionFilter } from 'src/app/interfaces/IOptionFilter';\r\n\r\n@Component({\r\n  selector: 'app-reports',\r\n  templateUrl: './app-reports.component.html',\r\n  styleUrls: ['./app-reports.component.scss']\r\n})\r\n\r\nexport class ReportsComponent implements OnInit {\r\n  public reports: Observable<IReport[]>;\r\n  public allFilters: IOptionFilter[];\r\n  public optionsFilter: IOptionFilter[];\r\n  public filteredResult: IReport[];\r\n\r\n  constructor(private reportsService: ReportsService,\r\n              private filterService: FiltersService) {}\r\n\r\n  ngOnInit() {\r\n    this.reports = this.reportsService.getReports();\r\n    this.allFilters = this.filterService.getFilters();\r\n    this.filteredResult = [];\r\n  }\r\n\r\n  public applyFilter() {\r\n    this.optionsFilter = this.getActiveFilters();\r\n    this.reports = this.filterService.applyFilterReports.call(this, this.reports);\r\n  }\r\n\r\n  public getActiveFilters() {\r\n    return this.allFilters.filter((option) => {\r\n      if (option.Type === 'text' && option.Value !== '') {\r\n        return true;\r\n      }\r\n      return option.State;\r\n    });\r\n  }\r\n\r\n  public resetFilters() {\r\n    this.optionsFilter.forEach((optionFilter) => {\r\n      if (optionFilter.Type === 'text') {\r\n        optionFilter.Value = '';\r\n      } else {\r\n        optionFilter.State = false;\r\n      }\r\n      this.reports = this.reportsService.getReports();\r\n    });\r\n  }\r\n}\r\n","\r\n<div class=\"container-reports\">\r\n  <!--filters-->\r\n  <mat-toolbar class=\"mat-item-toolbar\">\r\n    <div *ngFor=\"let filter of allFilters\">\r\n      <div [ngSwitch]=\"filter.Type\">\r\n        <div *ngSwitchCase=\"'checkbox'\">\r\n          <mat-checkbox class=\"mat-item-checkbox\"\r\n                        (change)=\"applyFilter()\"\r\n                        [(ngModel)]=\"filter.State\">#{{filter.Tag}}\r\n          </mat-checkbox>\r\n        </div>\r\n        <div *ngSwitchCase=\"'text'\">\r\n          <mat-form-field class=\"mat-item-text\">\r\n            <mat-label>#</mat-label>\r\n            <input matInput [(ngModel)]=\"filter.Value\"\r\n                            (ngModelChange)=\"applyFilter()\">\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mat-raised-button color=\"primary\" (click)=\"resetFilters()\">reset filters</button>\r\n  </mat-toolbar>\r\n  <!--end-->\r\n\r\n  <!--reports-->\r\n  <div *ngFor=\"let report of reports | async \" class=\"report-card\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <div mat-card-avatar class=\"header-image\"></div>\r\n        <mat-card-title>{{report.Author}}</mat-card-title>\r\n        <mat-card-subtitle>{{report.Type}} / {{report.Language}}</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <img mat-card-image src=\"{{report.imageUrl}}\" alt=\"Photo of a Shiba Inu\">\r\n      <mat-card-content>\r\n        <p>{{report.Description}}</p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n  <!--end-->\r\n</div>\r\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\r\nimport { IReport } from '../interfaces/IReport';\r\nimport { Injectable } from '@angular/core';\r\nimport { Reports } from './mock.reports';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class InMemoryDataService implements InMemoryDbService {\r\n  createDb() {\r\n    return {Reports};\r\n  }\r\n\r\n  // Overrides the genId method to ensure that a hero always has an id.\r\n  // If the heroes array is empty,\r\n  // the method below returns the initial number (11).\r\n  // if the heroes array is not empty, the method below returns the highest\r\n  // hero id + 1.\r\n  genId(reports: IReport[]): number {\r\n    return reports.length > 0 ? Math.max(...reports.map(report => report.Id)) + 1 : 1;\r\n  }\r\n}\r\n","import { IReport } from '../interfaces/IReport';\r\n\r\nexport const Reports: IReport[] = [\r\n  {\r\n    Id: 1,\r\n    Author: 'Автор 1',\r\n    Description: 'GraphQL-фрагменты на клиенте: История появления, ошибки использования',\r\n    Type: 'ADVANCED',\r\n    Language: 'RU',\r\n    imageUrl: 'https://cdn.pixabay.com/photo/2017/11/23/15/29/kitten-2973032_960_720.jpg',\r\n    tags: ['RU', 'ADVANCED'],\r\n  },\r\n  {\r\n    Id: 2,\r\n    Author: 'Author 2',\r\n    Description: 'Client rendering, server rendering, pre rendering. The full spectrum of JS website and application performance delivery',\r\n    Type: 'INTERMEDIATE',\r\n    Language: 'EN',\r\n    imageUrl: 'https://cdn.pixabay.com/photo/2018/07/01/11/53/cat-3509256_960_720.jpg',\r\n    tags: ['EN', 'INTERMEDIATE'],\r\n  },\r\n  {\r\n    Id: 3,\r\n    Author: 'Author 3',\r\n    Description: '@babel/how-to',\r\n    Type: 'ADVANCED',\r\n    Language: 'EN',\r\n    imageUrl: 'https://cdn.pixabay.com/photo/2015/11/16/22/14/cat-1046544_960_720.jpg',\r\n    tags: ['EN', 'ADVANCED'],\r\n  },\r\n  {\r\n    Id: 4,\r\n    Author: 'Автор 4',\r\n    Description: 'Разработка компилятора для TypeScript на TypeScript на базе LLVM',\r\n    Type: 'HARDCORE',\r\n    Language: 'RU',\r\n    imageUrl: 'https://cdn.pixabay.com/photo/2018/08/19/23/32/kitten-3617833_960_720.jpg',\r\n    tags: ['RU', 'HARDCORE'],\r\n  },\r\n  {\r\n    Id: 5,\r\n    Author: 'Автор 5',\r\n    Description: 'CSS definition syntax',\r\n    Type: 'HARDCORE',\r\n    Language: 'RU',\r\n    imageUrl: 'https://cdn.pixabay.com/photo/2012/11/26/13/58/cat-67345_960_720.jpg',\r\n    tags: ['RU', 'HARDCORE'],\r\n  },\r\n  {\r\n    Id: 6,\r\n    Author: 'Автор 6',\r\n    Description: 'Может ли компилятор молиться на благо всех живых существ? Молитва на JavaScript и WebGL',\r\n    Type: 'ACADEMIC',\r\n    Language: 'RU',\r\n    imageUrl: 'https://cdn.pixabay.com/photo/2018/08/19/23/37/kitten-3617838_960_720.jpg',\r\n    tags: ['RU', 'ACADEMIC'],\r\n  },\r\n  {\r\n    Id: 7,\r\n    Author: 'Автор 7',\r\n    Description: 'Карьерная эффективность и карьерный путь в ИТ',\r\n    Type: 'ACADEMIC',\r\n    Language: 'EN',\r\n    imageUrl: 'https://cdn.pixabay.com/photo/2017/05/31/21/52/cat-2361787_960_720.jpg',\r\n    tags: ['EN', 'ACADEMIC'],\r\n  },\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { IOptionFilter } from '../interfaces/IOptionFilter';\r\nimport { Observable, of } from 'rxjs';\r\nimport { IReport } from '../interfaces/IReport';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class FiltersService {\r\n  private optionsFilter: IOptionFilter[];\r\n\r\n  public applyFilterReports(reports: Observable<IReport[]>): Observable<IReport[]> {\r\n    return reports.pipe(\r\n      map((reports) => {\r\n\r\n        let textFilter = this.optionsFilter.filter((optionFilter) => {\r\n          return optionFilter.Type === 'text';\r\n        });\r\n\r\n        if (textFilter.length === 0) {\r\n          textFilter = [{\r\n            Value: '',\r\n            Type: 'text'\r\n          }];\r\n        }\r\n\r\n        return reports.filter((report) => {\r\n          for (let i = 0; i < this.optionsFilter.length; i++) {\r\n            if (!report.tags.includes(this.optionsFilter[i].Tag) && this.optionsFilter[i].Type !== 'text') {\r\n              return false;\r\n            }\r\n          }\r\n          if (textFilter[0].Value !== '') {\r\n              if (report.Description.toLowerCase().indexOf(textFilter[0].Value.toLowerCase()) >= 0 ||\r\n                  report.Author.toLowerCase().indexOf(textFilter[0].Value.toLowerCase()) >= 0) {\r\n                return true;\r\n              } else {\r\n                return false;\r\n              }\r\n          }\r\n          return true;\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  public getFilters(): IOptionFilter[] {\r\n    return [\r\n      {\r\n        Tag: 'RU',\r\n        State: false,\r\n        Type: 'checkbox',\r\n      },\r\n      {\r\n        Tag: 'EN',\r\n        State: false,\r\n        Type: 'checkbox',\r\n      },\r\n      {\r\n        Tag: 'HARDCORE',\r\n        State: false,\r\n        Type: 'checkbox',\r\n      },\r\n      {\r\n        Tag: 'HOT',\r\n        State: false,\r\n        Type: 'checkbox',\r\n      },\r\n      {\r\n        Tag: 'INTERMEDIATE',\r\n        State: false,\r\n        Type: 'checkbox',\r\n      },\r\n      {\r\n        Tag: 'ACADEMIC',\r\n        State: false,\r\n        Type: 'checkbox',\r\n      },\r\n      {\r\n        Tag: 'ADVANCED',\r\n        State: false,\r\n        Type: 'checkbox',\r\n      },\r\n      {\r\n        Type: 'text',\r\n        Value: '',\r\n      }\r\n    ];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { IReport } from '../interfaces/IReport';\r\nimport { Reports } from '../mocks/mock.reports';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ReportsService {\r\n  private reportsUrl = 'api/Reports';\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  public getReports(): Observable<IReport[]> {\r\n    return this.http.get<IReport[]>(this.reportsUrl)\r\n          .pipe(\r\n            tap(_ => this.log('fetched reports from server')),\r\n          );\r\n  }\r\n\r\n  private log(message: string) {\r\n    console.log(message);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}