{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/app-reports/app-reports.component.ts","webpack:///src/app/components/app-reports/app-reports.component.html","webpack:///src/app/mocks/in-memory.data.service.ts","webpack:///src/app/mocks/mock.reports.ts","webpack:///src/app/services/filters.service.ts","webpack:///src/app/services/reports.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","dataEncapsulation","declarations","providers","bootstrap","ReportsComponent","reportsService","filterService","reports","getReports","allFilters","getFilters","filteredResult","optionsFilter","getActiveFilters","applyFilterReports","call","filter","option","Type","Value","State","forEach","optionFilter","resetFilters","InMemoryDataService","Reports","length","Math","max","map","report","Id","providedIn","Author","Description","Language","imageUrl","tags","FiltersService","pipe","textFilter","i","includes","Tag","toLowerCase","indexOf","ReportsService","http","reportsUrl","get","_","log","message","console","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,EAAvB;;QAMaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaM,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,UAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,oC;AAAA;AAAA;ACPzB;;AAA6B;;AAAW;;AAExC;;;;;;;;;sEDKaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,iD,CAiBA;;;QA0BaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAfJ,CACP,uEADO,EAEP,4FAFO,EAGP,2DAHO,EAIP,0EAJO,EAKP,oEALO,EAMP,4EANO,EAOP,uEAPO,EAQP,yEARO,EASP,oEATO,EAUP,qEAVO,EAWP,0FAA+BP,OAA/B,CACE,kFADF,EACuB;AAAEQ,yBAAiB,EAAE;AAArB,OADvB,CAXO,CAeI;;;;0HAGFD,S,EAAS;AAAA,uBAtBhB,2DAsBgB,EArBhB,8FAqBgB;AArBA,kBAIlB,uEAJkB,EAKlB,4FALkB,EAMlB,2DANkB,EAOlB,0EAPkB,EAQlB,oEARkB,EASlB,4EATkB,EAUlB,uEAVkB,EAWlB,yEAXkB,EAYlB,oEAZkB,EAalB,qEAbkB,EAaF,yFAbE;AAqBA,O;AARF,K;;;;;sEAQPA,S,EAAS;cAxBrB,sDAwBqB;eAxBZ;AACRE,sBAAY,EAAE,CACV,2DADU,EAEV,8FAFU,CADN;AAMRR,iBAAO,EAAE,CACP,uEADO,EAEP,4FAFO,EAGP,2DAHO,EAIP,0EAJO,EAKP,oEALO,EAMP,4EANO,EAOP,uEAPO,EAQP,yEARO,EASP,oEATO,EAUP,qEAVO,EAWP,0FAA+BD,OAA/B,CACE,kFADF,EACuB;AAAEQ,6BAAiB,EAAE;AAArB,WADvB,CAXO,CAND;AAqBRE,mBAAS,EAAE,EArBH;AAsBRC,mBAAS,EAAE,CAAC,2DAAD;AAtBH,S;AAwBY,Q;;;;;;;;;;;;;;;;;;AC3CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACMQ;;AACE;;AACc;AAAA;;AAAA;;AAAA;AAAA,WAAwB,eAAxB,EAAwB;AAAA;;AAAA;;AAAA;AAAA,SAAxB;;AAC2B;;AACzC;;AACF;;;;;;AAFgB;;AAAA;;AAA2B;;AAAA;;;;;;;;AAG3C;;AACE;;AACE;;AAAW;;AAAC;;AACZ;;AAAgB;AAAA;;AAAA;;AAAA;AAAA,WAA0B,eAA1B,EAA0B;AAAA;;AAAA;;AAAA;AAAA,SAA1B;;AAAhB;;AAEF;;AACF;;;;;;AAHoB;;AAAA;;;;;;AAXxB;;AACE;;AACE;;AAMA;;AAOF;;AACF;;;;;;AAfO;;AAAA;;AACE;;AAAA;;AAMA;;AAAA;;;;;;AAcX;;AACE;;AACE;;AACE;;AACA;;AAAgB;;AAAiB;;AACjC;;AAAmB;;AAAqC;;AAC1D;;AACA;;AACA;;AACE;;AAAG;;AAAsB;;AAC3B;;AACF;;AACF;;;;;;AARsB;;AAAA;;AACG;;AAAA;;AAED;;AAAA;;AAEf;;AAAA;;;;QDtBEC,gB;;;AAMX,gCAAoBC,cAApB,EACoBC,aADpB,EACmD;AAAA;;AAD/B,aAAAD,cAAA,GAAAA,cAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AAAiC;;;;mCAE1C;AACT,eAAKC,OAAL,GAAe,KAAKF,cAAL,CAAoBG,UAApB,EAAf;AACA,eAAKC,UAAL,GAAkB,KAAKH,aAAL,CAAmBI,UAAnB,EAAlB;AACA,eAAKC,cAAL,GAAsB,EAAtB;AACD;;;sCAEoB;AACnB,eAAKC,aAAL,GAAqB,KAAKC,gBAAL,EAArB;AACA,eAAKN,OAAL,GAAe,KAAKD,aAAL,CAAmBQ,kBAAnB,CAAsCC,IAAtC,CAA2C,IAA3C,EAAiD,KAAKR,OAAtD,CAAf;AACD;;;2CAEyB;AACxB,iBAAO,KAAKE,UAAL,CAAgBO,MAAhB,CAAuB,UAACC,MAAD,EAAY;AACxC,gBAAIA,MAAM,CAACC,IAAP,KAAgB,MAAhB,IAA0BD,MAAM,CAACE,KAAP,KAAiB,EAA/C,EAAmD;AACjD,qBAAO,IAAP;AACD;;AACD,mBAAOF,MAAM,CAACG,KAAd;AACD,WALM,CAAP;AAMD;;;uCAEqB;AAAA;;AACpB,eAAKR,aAAL,CAAmBS,OAAnB,CAA2B,UAACC,YAAD,EAAkB;AAC3C,gBAAIA,YAAY,CAACJ,IAAb,KAAsB,MAA1B,EAAkC;AAChCI,0BAAY,CAACH,KAAb,GAAqB,EAArB;AACD,aAFD,MAEO;AACLG,0BAAY,CAACF,KAAb,GAAqB,KAArB;AACD;;AACD,iBAAI,CAACb,OAAL,GAAe,KAAI,CAACF,cAAL,CAAoBG,UAApB,EAAf;AACD,WAPD;AAQD;;;;;;;uBAtCUJ,gB,EAAgB,yI,EAAA,gJ;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,c;AAAA,a;AAAA,uf;AAAA;AAAA;ACZ7B;;AAEE;;AACE;;AAiBA;;AAA0C;AAAA,mBAAS,IAAAmB,YAAA,EAAT;AAAuB,WAAvB;;AAAyB;;AAAa;;AAClF;;AAIA;;;;AAcF;;;;AApCS;;AAAA;;AAsBF;;AAAA;;;;;;;;;;sEDbMnB,gB,EAAgB;cAN5B,uDAM4B;eANlB;AACTR,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAMkB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEX7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMa0B,mB;;;;;;;;;mCACA;AACT,iBAAO;AAACC,mBAAO,EAAP;AAAD,WAAP;AACD,S,CAED;AACA;AACA;AACA;AACA;;;;8BACMlB,O,EAAkB;AACtB,iBAAOA,OAAO,CAACmB,MAAR,GAAiB,CAAjB,GAAqBC,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQpB,OAAO,CAACsB,GAAR,CAAY,UAAAC,MAAM;AAAA,mBAAIA,MAAM,CAACC,EAAX;AAAA,WAAlB,CAAR,EAAJ,GAAgD,CAArE,GAAyE,CAAhF;AACD;;;;;;;uBAZUP,mB;AAAmB,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFlB;;;;;sEAEDA,mB,EAAmB;cAH/B,wDAG+B;eAHpB;AACVQ,oBAAU,EAAE;AADF,S;AAGoB,Q;;;;;;;;;;;;;;;;;;ACNhC;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAMP,OAAO,GAAc,CAChC;AACEM,QAAE,EAAE,CADN;AAEEE,YAAM,EAAE,SAFV;AAGEC,iBAAW,EAAE,uEAHf;AAIEhB,UAAI,EAAE,UAJR;AAKEiB,cAAQ,EAAE,IALZ;AAMEC,cAAQ,EAAE,2EANZ;AAOEC,UAAI,EAAE,CAAC,IAAD,EAAO,UAAP;AAPR,KADgC,EAUhC;AACEN,QAAE,EAAE,CADN;AAEEE,YAAM,EAAE,UAFV;AAGEC,iBAAW,EAAE,yHAHf;AAIEhB,UAAI,EAAE,cAJR;AAKEiB,cAAQ,EAAE,IALZ;AAMEC,cAAQ,EAAE,wEANZ;AAOEC,UAAI,EAAE,CAAC,IAAD,EAAO,cAAP;AAPR,KAVgC,EAmBhC;AACEN,QAAE,EAAE,CADN;AAEEE,YAAM,EAAE,UAFV;AAGEC,iBAAW,EAAE,eAHf;AAIEhB,UAAI,EAAE,UAJR;AAKEiB,cAAQ,EAAE,IALZ;AAMEC,cAAQ,EAAE,wEANZ;AAOEC,UAAI,EAAE,CAAC,IAAD,EAAO,UAAP;AAPR,KAnBgC,EA4BhC;AACEN,QAAE,EAAE,CADN;AAEEE,YAAM,EAAE,SAFV;AAGEC,iBAAW,EAAE,kEAHf;AAIEhB,UAAI,EAAE,UAJR;AAKEiB,cAAQ,EAAE,IALZ;AAMEC,cAAQ,EAAE,2EANZ;AAOEC,UAAI,EAAE,CAAC,IAAD,EAAO,UAAP;AAPR,KA5BgC,EAqChC;AACEN,QAAE,EAAE,CADN;AAEEE,YAAM,EAAE,SAFV;AAGEC,iBAAW,EAAE,uBAHf;AAIEhB,UAAI,EAAE,UAJR;AAKEiB,cAAQ,EAAE,IALZ;AAMEC,cAAQ,EAAE,sEANZ;AAOEC,UAAI,EAAE,CAAC,IAAD,EAAO,UAAP;AAPR,KArCgC,EA8ChC;AACEN,QAAE,EAAE,CADN;AAEEE,YAAM,EAAE,SAFV;AAGEC,iBAAW,EAAE,yFAHf;AAIEhB,UAAI,EAAE,UAJR;AAKEiB,cAAQ,EAAE,IALZ;AAMEC,cAAQ,EAAE,2EANZ;AAOEC,UAAI,EAAE,CAAC,IAAD,EAAO,UAAP;AAPR,KA9CgC,EAuDhC;AACEN,QAAE,EAAE,CADN;AAEEE,YAAM,EAAE,SAFV;AAGEC,iBAAW,EAAE,+CAHf;AAIEhB,UAAI,EAAE,UAJR;AAKEiB,cAAQ,EAAE,IALZ;AAMEC,cAAQ,EAAE,wEANZ;AAOEC,UAAI,EAAE,CAAC,IAAD,EAAO,UAAP;AAPR,KAvDgC,CAA3B;;;;;;;;;;;;;;;;ACFP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYaC,c;;;;;;;;;2CAGe/B,O,EAA8B;AAAA;;AACtD,iBAAOA,OAAO,CAACgC,IAAR,CACL,2DAAI,UAAChC,OAAD,EAAa;AAEf,gBAAIiC,UAAU,GAAG,MAAI,CAAC5B,aAAL,CAAmBI,MAAnB,CAA0B,UAACM,YAAD,EAAkB;AAC3D,qBAAOA,YAAY,CAACJ,IAAb,KAAsB,MAA7B;AACD,aAFgB,CAAjB;;AAIA,gBAAIsB,UAAU,CAACd,MAAX,KAAsB,CAA1B,EAA6B;AAC3Bc,wBAAU,GAAG,CAAC;AACZrB,qBAAK,EAAE,EADK;AAEZD,oBAAI,EAAE;AAFM,eAAD,CAAb;AAID;;AAED,mBAAOX,OAAO,CAACS,MAAR,CAAe,UAACc,MAAD,EAAY;AAChC,mBAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,MAAI,CAAC7B,aAAL,CAAmBc,MAAvC,EAA+Ce,CAAC,EAAhD,EAAoD;AAClD,oBAAI,CAACX,MAAM,CAACO,IAAP,CAAYK,QAAZ,CAAqB,MAAI,CAAC9B,aAAL,CAAmB6B,CAAnB,EAAsBE,GAA3C,CAAD,IAAoD,MAAI,CAAC/B,aAAL,CAAmB6B,CAAnB,EAAsBvB,IAAtB,KAA+B,MAAvF,EAA+F;AAC7F,yBAAO,KAAP;AACD;AACF;;AACD,kBAAIsB,UAAU,CAAC,CAAD,CAAV,CAAcrB,KAAd,KAAwB,EAA5B,EAAgC;AAC5B,oBAAIW,MAAM,CAACI,WAAP,CAAmBU,WAAnB,GAAiCC,OAAjC,CAAyCL,UAAU,CAAC,CAAD,CAAV,CAAcrB,KAAd,CAAoByB,WAApB,EAAzC,KAA+E,CAA/E,IACAd,MAAM,CAACG,MAAP,CAAcW,WAAd,GAA4BC,OAA5B,CAAoCL,UAAU,CAAC,CAAD,CAAV,CAAcrB,KAAd,CAAoByB,WAApB,EAApC,KAA0E,CAD9E,EACiF;AAC/E,yBAAO,IAAP;AACD,iBAHD,MAGO;AACL,yBAAO,KAAP;AACD;AACJ;;AACD,qBAAO,IAAP;AACD,aAfM,CAAP;AAgBD,WA7BD,CADK,CAAP;AAgCD;;;qCAEgB;AACf,iBAAO,CACL;AACED,eAAG,EAAE,IADP;AAEEvB,iBAAK,EAAE,KAFT;AAGEF,gBAAI,EAAE;AAHR,WADK,EAML;AACEyB,eAAG,EAAE,IADP;AAEEvB,iBAAK,EAAE,KAFT;AAGEF,gBAAI,EAAE;AAHR,WANK,EAWL;AACEyB,eAAG,EAAE,UADP;AAEEvB,iBAAK,EAAE,KAFT;AAGEF,gBAAI,EAAE;AAHR,WAXK,EAgBL;AACEyB,eAAG,EAAE,KADP;AAEEvB,iBAAK,EAAE,KAFT;AAGEF,gBAAI,EAAE;AAHR,WAhBK,EAqBL;AACEyB,eAAG,EAAE,cADP;AAEEvB,iBAAK,EAAE,KAFT;AAGEF,gBAAI,EAAE;AAHR,WArBK,EA0BL;AACEyB,eAAG,EAAE,UADP;AAEEvB,iBAAK,EAAE,KAFT;AAGEF,gBAAI,EAAE;AAHR,WA1BK,EA+BL;AACEyB,eAAG,EAAE,UADP;AAEEvB,iBAAK,EAAE,KAFT;AAGEF,gBAAI,EAAE;AAHR,WA/BK,EAoCL;AACEA,gBAAI,EAAE,MADR;AAEEC,iBAAK,EAAE;AAFT,WApCK,CAAP;AAyCD;;;;;;;uBAhFUmB,c;AAAc,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAJb;;;;;sEAIDA,c,EAAc;cAL1B,wDAK0B;eALf;AACVN,oBAAU,EAAE;AADF,S;AAKe,Q;;;;;;;;;;;;;;;;;;ACZ3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWac,c;;;AAGX,8BACUC,IADV,EAC0B;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AAHF,aAAAC,UAAA,GAAa,aAAb;AAIJ;;;;qCAEa;AAAA;;AACf,iBAAO,KAAKD,IAAL,CAAUE,GAAV,CAAyB,KAAKD,UAA9B,EACAT,IADA,CAEC,2DAAI,UAAAW,CAAC;AAAA,mBAAI,MAAI,CAACC,GAAL,CAAS,6BAAT,CAAJ;AAAA,WAAL,CAFD,CAAP;AAID;;;4BAEWC,O,EAAiB;AAC3BC,iBAAO,CAACF,GAAR,CAAYC,OAAZ;AACD;;;;;;;uBAhBUN,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAHb;;;;;sEAGDA,c,EAAc;cAJ1B,wDAI0B;eAJf;AACVd,oBAAU,EAAE;AADF,S;AAIe,Q;;;;;;;;;;;;;;;;;;;;;;ACX3B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMsB,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIJ,OAAO,CAACK,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'task-app';\n}\n","<mat-toolbar color=\"primary\">V.Task Test</mat-toolbar>\n\n<app-reports></app-reports>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReportsComponent } from './components/app-reports/app-reports.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './mocks/in-memory.data.service';\n// import { FilterReports } from './filterPipe/filter.pipe';\n\n@NgModule({\n  declarations: [\n      AppComponent,\n      ReportsComponent,\n      // FilterReports,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatButtonModule,\n    AppRoutingModule,\n    HttpClientModule,\n    HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryDataService, { dataEncapsulation: false }\n      ),\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { ReportsService } from '../../services/reports.service';\r\nimport { IReport } from 'src/app/interfaces/IReport';\r\nimport { Observable, of } from 'rxjs';\r\nimport { FiltersService } from 'src/app/services/filters.service';\r\nimport { IOptionFilter } from 'src/app/interfaces/IOptionFilter';\r\n\r\n@Component({\r\n  selector: 'app-reports',\r\n  templateUrl: './app-reports.component.html',\r\n  styleUrls: ['./app-reports.component.scss']\r\n})\r\n\r\nexport class ReportsComponent implements OnInit {\r\n  public reports: Observable<IReport[]>;\r\n  public allFilters: IOptionFilter[];\r\n  public optionsFilter: IOptionFilter[];\r\n  public filteredResult: IReport[];\r\n\r\n  constructor(private reportsService: ReportsService,\r\n              private filterService: FiltersService) {}\r\n\r\n  ngOnInit() {\r\n    this.reports = this.reportsService.getReports();\r\n    this.allFilters = this.filterService.getFilters();\r\n    this.filteredResult = [];\r\n  }\r\n\r\n  public applyFilter() {\r\n    this.optionsFilter = this.getActiveFilters();\r\n    this.reports = this.filterService.applyFilterReports.call(this, this.reports);\r\n  }\r\n\r\n  public getActiveFilters() {\r\n    return this.allFilters.filter((option) => {\r\n      if (option.Type === 'text' && option.Value !== '') {\r\n        return true;\r\n      }\r\n      return option.State;\r\n    });\r\n  }\r\n\r\n  public resetFilters() {\r\n    this.optionsFilter.forEach((optionFilter) => {\r\n      if (optionFilter.Type === 'text') {\r\n        optionFilter.Value = '';\r\n      } else {\r\n        optionFilter.State = false;\r\n      }\r\n      this.reports = this.reportsService.getReports();\r\n    });\r\n  }\r\n}\r\n","\r\n<div class=\"container-reports\">\r\n  <!--filters-->\r\n  <mat-toolbar class=\"mat-item-toolbar\">\r\n    <div *ngFor=\"let filter of allFilters\">\r\n      <div [ngSwitch]=\"filter.Type\">\r\n        <div *ngSwitchCase=\"'checkbox'\">\r\n          <mat-checkbox class=\"mat-item-checkbox\"\r\n                        (change)=\"applyFilter()\"\r\n                        [(ngModel)]=\"filter.State\">#{{filter.Tag}}\r\n          </mat-checkbox>\r\n        </div>\r\n        <div *ngSwitchCase=\"'text'\">\r\n          <mat-form-field class=\"mat-item-text\">\r\n            <mat-label>#</mat-label>\r\n            <input matInput [(ngModel)]=\"filter.Value\"\r\n                            (ngModelChange)=\"applyFilter()\">\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mat-raised-button color=\"primary\" (click)=\"resetFilters()\">reset filters</button>\r\n  </mat-toolbar>\r\n  <!--end-->\r\n\r\n  <!--reports-->\r\n  <div *ngFor=\"let report of reports | async \" class=\"report-card\">\r\n    <mat-card>\r\n      <mat-card-header>\r\n        <div mat-card-avatar class=\"header-image\"></div>\r\n        <mat-card-title>{{report.Author}}</mat-card-title>\r\n        <mat-card-subtitle>{{report.Type}} / {{report.Language}}</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <img mat-card-image src=\"{{report.imageUrl}}\" alt=\"Photo of a Shiba Inu\">\r\n      <mat-card-content>\r\n        <p>{{report.Description}}</p>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n  <!--end-->\r\n</div>\r\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\r\nimport { IReport } from '../interfaces/IReport';\r\nimport { Injectable } from '@angular/core';\r\nimport { Reports } from './mock.reports';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class InMemoryDataService implements InMemoryDbService {\r\n  createDb() {\r\n    return {Reports};\r\n  }\r\n\r\n  // Overrides the genId method to ensure that a hero always has an id.\r\n  // If the heroes array is empty,\r\n  // the method below returns the initial number (11).\r\n  // if the heroes array is not empty, the method below returns the highest\r\n  // hero id + 1.\r\n  genId(reports: IReport[]): number {\r\n    return reports.length > 0 ? Math.max(...reports.map(report => report.Id)) + 1 : 1;\r\n  }\r\n}\r\n","import { IReport } from '../interfaces/IReport';\r\n\r\nexport const Reports: IReport[] = [\r\n  {\r\n    Id: 1,\r\n    Author: 'Автор 1',\r\n    Description: 'GraphQL-фрагменты на клиенте: История появления, ошибки использования',\r\n    Type: 'ADVANCED',\r\n    Language: 'RU',\r\n    imageUrl: 'https://cdn.pixabay.com/photo/2017/11/23/15/29/kitten-2973032_960_720.jpg',\r\n    tags: ['RU', 'ADVANCED'],\r\n  },\r\n  {\r\n    Id: 2,\r\n    Author: 'Author 2',\r\n    Description: 'Client rendering, server rendering, pre rendering. The full spectrum of JS website and application performance delivery',\r\n    Type: 'INTERMEDIATE',\r\n    Language: 'EN',\r\n    imageUrl: 'https://cdn.pixabay.com/photo/2018/07/01/11/53/cat-3509256_960_720.jpg',\r\n    tags: ['EN', 'INTERMEDIATE'],\r\n  },\r\n  {\r\n    Id: 3,\r\n    Author: 'Author 3',\r\n    Description: '@babel/how-to',\r\n    Type: 'ADVANCED',\r\n    Language: 'EN',\r\n    imageUrl: 'https://cdn.pixabay.com/photo/2015/11/16/22/14/cat-1046544_960_720.jpg',\r\n    tags: ['EN', 'ADVANCED'],\r\n  },\r\n  {\r\n    Id: 4,\r\n    Author: 'Автор 4',\r\n    Description: 'Разработка компилятора для TypeScript на TypeScript на базе LLVM',\r\n    Type: 'HARDCORE',\r\n    Language: 'RU',\r\n    imageUrl: 'https://cdn.pixabay.com/photo/2018/08/19/23/32/kitten-3617833_960_720.jpg',\r\n    tags: ['RU', 'HARDCORE'],\r\n  },\r\n  {\r\n    Id: 5,\r\n    Author: 'Автор 5',\r\n    Description: 'CSS definition syntax',\r\n    Type: 'HARDCORE',\r\n    Language: 'RU',\r\n    imageUrl: 'https://cdn.pixabay.com/photo/2012/11/26/13/58/cat-67345_960_720.jpg',\r\n    tags: ['RU', 'HARDCORE'],\r\n  },\r\n  {\r\n    Id: 6,\r\n    Author: 'Автор 6',\r\n    Description: 'Может ли компилятор молиться на благо всех живых существ? Молитва на JavaScript и WebGL',\r\n    Type: 'ACADEMIC',\r\n    Language: 'RU',\r\n    imageUrl: 'https://cdn.pixabay.com/photo/2018/08/19/23/37/kitten-3617838_960_720.jpg',\r\n    tags: ['RU', 'ACADEMIC'],\r\n  },\r\n  {\r\n    Id: 7,\r\n    Author: 'Автор 7',\r\n    Description: 'Карьерная эффективность и карьерный путь в ИТ',\r\n    Type: 'ACADEMIC',\r\n    Language: 'EN',\r\n    imageUrl: 'https://cdn.pixabay.com/photo/2017/05/31/21/52/cat-2361787_960_720.jpg',\r\n    tags: ['EN', 'ACADEMIC'],\r\n  },\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { IOptionFilter } from '../interfaces/IOptionFilter';\r\nimport { Observable, of } from 'rxjs';\r\nimport { IReport } from '../interfaces/IReport';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class FiltersService {\r\n  private optionsFilter: IOptionFilter[];\r\n\r\n  public applyFilterReports(reports: Observable<IReport[]>): Observable<IReport[]> {\r\n    return reports.pipe(\r\n      map((reports) => {\r\n\r\n        let textFilter = this.optionsFilter.filter((optionFilter) => {\r\n          return optionFilter.Type === 'text';\r\n        });\r\n\r\n        if (textFilter.length === 0) {\r\n          textFilter = [{\r\n            Value: '',\r\n            Type: 'text'\r\n          }];\r\n        }\r\n\r\n        return reports.filter((report) => {\r\n          for (let i = 0; i < this.optionsFilter.length; i++) {\r\n            if (!report.tags.includes(this.optionsFilter[i].Tag) && this.optionsFilter[i].Type !== 'text') {\r\n              return false;\r\n            }\r\n          }\r\n          if (textFilter[0].Value !== '') {\r\n              if (report.Description.toLowerCase().indexOf(textFilter[0].Value.toLowerCase()) >= 0 ||\r\n                  report.Author.toLowerCase().indexOf(textFilter[0].Value.toLowerCase()) >= 0) {\r\n                return true;\r\n              } else {\r\n                return false;\r\n              }\r\n          }\r\n          return true;\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  public getFilters(): IOptionFilter[] {\r\n    return [\r\n      {\r\n        Tag: 'RU',\r\n        State: false,\r\n        Type: 'checkbox',\r\n      },\r\n      {\r\n        Tag: 'EN',\r\n        State: false,\r\n        Type: 'checkbox',\r\n      },\r\n      {\r\n        Tag: 'HARDCORE',\r\n        State: false,\r\n        Type: 'checkbox',\r\n      },\r\n      {\r\n        Tag: 'HOT',\r\n        State: false,\r\n        Type: 'checkbox',\r\n      },\r\n      {\r\n        Tag: 'INTERMEDIATE',\r\n        State: false,\r\n        Type: 'checkbox',\r\n      },\r\n      {\r\n        Tag: 'ACADEMIC',\r\n        State: false,\r\n        Type: 'checkbox',\r\n      },\r\n      {\r\n        Tag: 'ADVANCED',\r\n        State: false,\r\n        Type: 'checkbox',\r\n      },\r\n      {\r\n        Type: 'text',\r\n        Value: '',\r\n      }\r\n    ];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { IReport } from '../interfaces/IReport';\r\nimport { Reports } from '../mocks/mock.reports';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ReportsService {\r\n  private reportsUrl = 'api/Reports';\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  public getReports(): Observable<IReport[]> {\r\n    return this.http.get<IReport[]>(this.reportsUrl)\r\n          .pipe(\r\n            tap(_ => this.log('fetched reports from server')),\r\n          );\r\n  }\r\n\r\n  private log(message: string) {\r\n    console.log(message);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}